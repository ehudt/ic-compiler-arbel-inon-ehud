/* Web Data Management - Exercise 2 - Source Code */
/* Ehud Tamir, ID 036934644, ehudtami */
/* Arbel Zinger, ID 034666610, arbelzin */

/* Graph.java */
package HITS;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class Graph implements Iterable<Node>{
	private Map<Node, List<Node>> adj;

	public Graph(){
		adj = new HashMap<Node, List<Node>>();
	}	
	public void addNode(Node x){
		adj.put(x, new ArrayList<Node>());
	}
	public void addAdj(Node x, Node y){ // add an adjacency in the graph
		(adj.get(x)).add(y);		
	}
	public Iterator<Node> iterator(){
		return adj.keySet().iterator();
	}
	public List<Node> getAdj(Node x){ // get the adjacency list of a node x
		return adj.get(x);
	}
	
	public Boolean isAdj(Node x, Node y){ // check if x is adjacent to y
		return (adj.get(x)).contains(y);
	}
	
	public Node getName(String name){ // get a graph node by its name
		for(Node x : this){
			if(x.name.equals(name)){
				return x
			}
		}
		return new Node("ERROR!",null);
	}
}

